// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReviewApi.Infra.Context;

namespace ReviewApi.Infra.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20200813190854_CreateReviewIndex")]
    partial class CreateReviewIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReviewApi.Domain.Entities.ProfileImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("filename")
                        .HasColumnType("nvarchar(41)")
                        .HasMaxLength(41);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnName("filepath")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_id")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .HasDefaultValue(null);

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("profile_images");
                });

            modelBuilder.Entity("ReviewApi.Domain.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatorId")
                        .HasColumnName("creator_id")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36);

                    b.Property<int>("Stars")
                        .HasColumnName("stars")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnName("text")
                        .HasColumnType("nvarchar(1500)")
                        .HasMaxLength(1500);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("Text", "Title");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("ReviewApi.Domain.Entities.ReviewImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("filename")
                        .HasColumnType("nvarchar(41)")
                        .HasMaxLength(41);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnName("filepath")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<Guid>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("review_id")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(36)
                        .HasDefaultValue(null);

                    b.HasKey("Id");

                    b.HasIndex("ReviewId")
                        .IsUnique();

                    b.ToTable("review_images");
                });

            modelBuilder.Entity("ReviewApi.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnName("confirmation_code")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<bool>("Confirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("confirmed")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password_hash")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ResetPasswordCode")
                        .HasColumnName("reset_password_code")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("ReviewApi.Domain.Entities.ProfileImage", b =>
                {
                    b.HasOne("ReviewApi.Domain.Entities.User", "User")
                        .WithOne("ProfileImage")
                        .HasForeignKey("ReviewApi.Domain.Entities.ProfileImage", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReviewApi.Domain.Entities.Review", b =>
                {
                    b.HasOne("ReviewApi.Domain.Entities.User", "Creator")
                        .WithMany("Reviews")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReviewApi.Domain.Entities.ReviewImage", b =>
                {
                    b.HasOne("ReviewApi.Domain.Entities.Review", "Review")
                        .WithOne("Image")
                        .HasForeignKey("ReviewApi.Domain.Entities.ReviewImage", "ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
